function uf_getTaxInvoiceDocumentTitle(codePart1, codePart2) {		var titlePart1Array = new Array();	var titlePart2Array = new Array();	titlePart1Array["01"] = "세금계산서";	titlePart1Array["02"] = "수정세금계산서";	titlePart1Array["03"] = "계산서";	titlePart1Array["04"] = "수정계산서";	titlePart2Array["01"] = "일반";				// 일반	titlePart2Array["02"] = "영세율";			// 영세율	titlePart2Array["03"] = "위수탁";	titlePart2Array["04"] = "수입";	titlePart2Array["05"] = "영세율위수탁";	return titlePart2Array[codePart2] + titlePart1Array[codePart1];}function uf_getTaxInvoiceDocumentPurposeName(code) {		var nameArray = new Array();	nameArray["01"] = "영수";	nameArray["02"] = "청구";	return nameArray[code];}function uf_getTaxInvoiceOwnerName(code) {	var nameArray = new Array();	nameArray["Invoicer"] = "공급자";	nameArray["Invoicee"] = "공급받는자";	return nameArray[code];}function uf_createTaxInvoiceFormData(id, value) {		$(function() {		//$("<input type='hidden' id='"+id+"' name='"+id+"' value='"+value+"'>").appendTo($("#" + _taxInvoice_DataFormObjId));		$("<textarea class='generated' id='"+id+"' name='"+id+"' style='display: none;'>"+value+"</textarea>").appendTo($("#" + _taxInvoice_DataFormObjId));	});}function uf_generateChannelHtml(data) {	// 거래선 삭제	$(".ChannelLineItem").remove();	var channelLineItem = "";	j = 0;	$.each(data, function(i, ech) {   		channelLineItem += "<tr>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\" align=\"center\"><input type=\"radio\" name=\"ECH_CODE\" value=\""+ech.code+"\" /></td>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\">"+ech.code+"</td>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\">"+ech.name+"</td>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\">"+ech.ceo+"</td>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\">"+ech.addr+"</td>";		channelLineItem += "</tr>";			j++;	}); 	if(j == 0) {		channelLineItem += "<tr>";		channelLineItem += "	<td class=\"tl_td_01 ChannelLineItem\" colspan=\"5\" align=\"center\">거래선 정보가 없습니다.</td>";		channelLineItem += "</tr>";	}	$("#ChannelLineItemHeader").after(channelLineItem);	if(j == 1) {		$(".ChannelLineItem > input").attr("checked", "true");	}}/*function uf_xmlFileOpen() {	$("#frm").ajaxSubmit(); }*/function uf_processXml(responseText, statusText, xhr, $form) {		data = responseText;	var xml;					//xml 개체	// MASTER	var ISSU_ID = "";			//승인번호                                     	var ISSU_DATE = "";			//발행일자                                     	var ISSU_TIME = "";			//발행시간                                     	var SERV_ID = "";			//서비스번호                                   	var SELR_MGR_ID1 = "";		//권                                           	var SELR_MGR_ID2 = "";		//호                                           	var SELR_MGR_ID3 = "";		//일련번호                                     	var REGS_DATE = "";			//작성일자                                     	var TAX_TYPE = "";			//세금계산서종류/분류                          	var POPS_CODE = "";			//영수/청구구분                                	var MODY_CODE = "";			//수정코드                                     	var NOTE1  = "";				//비고1                                        	var NOTE2 = "";				//비고2                                        	var NOTE3 = "";				//비고3                                        	var IMPT_NO = "";			//수입신고번호                                 	var ACEP_STAT_DATE = "";		//일괄발급시작일                               	var ACEP_END_DATE = "";		//일괄발급종료일                               	var ITEM_QUANT = "";			//수입총건                                     	var SELR_CORP_NO = "";		//공급자사업자번호                             	var SELR_CODE = "";			//공급자거래처코드                             	var SELR_CORP_NM = "";		//공급자상호                                   	var SELR_CEO = "";			//공급자대표자명                               	var SELR_ADDR = "";			//공급자주소                                   	var SELR_BUSS_CONS = "";		//공급자업태                                   	var SELR_BUSS_TYPE = "";		//공급자업종                                   	var SELR_CHRG_POST = "";		//공급자담당부서명                             	var SELR_CHRG_NM = "";		//공급자담당자명                               	var SELR_CHRG_TEL = "";		//공급자담당자전화번호                         	var SELR_CHRG_EMAIL = "";	//공급자담당자이메일                           	var BUYR_GB = "";			//공급받는자구분코드                           	var BUYR_CORP_NO = "";		//공급받는자사업자번호                         	var BUYR_CODE = "";			//공급받는자거래처코드                         	var BUYR_CORP_NM = "";		//공급받는자상호                               	var BUYR_CEO = "";			//공급받는자대표자명                           	var BUYR_ADDR = "";			//공급받는자주소                               	var BUYR_BUSS_CONS = "";		//공급받는자업태                               	var BUYR_BUSS_TYPE = "";		//공급받는자업종                               	var BUYR_CHRG_POST1 = "";	//공급받는자담당자부서명1                      	var BUYR_CHRG_NM1 = "";		//공급받는자담당자명1                          	var BUYR_CHRG_TEL1 = "";		//공급받는자담당자전화번호1                    	var BUYR_CHRG_EMAIL1 = "";	//공급받는자담당자이메일1                      	var BUYR_CHRG_POST2 = "";	//공급받는자담당자부서명2                      	var BUYR_CHRG_NM2 = "";		//공급받는자담당자명2                          	var BUYR_CHRG_TEL2 = "";		//공급받는자담당자전화번호2                    	var BUYR_CHRG_EMAIL2 = "";	//공급받는자담당자이메일2                      	var BROK_CORP_NO = "";		//수탁사업자등록번호                           	var BROK_CODE = "";			//수탁사업자거래처코드                         	var BROK_CORP_NM = "";		//수탁사업자상호                               	var BROK_CEO = "";			//수탁사업자대표자명                           	var BROK_ADDR = "";			//수탁사업자주소                               	var BROK_BUSS_CONS = "";		//수탁사업자업태                               	var BROK_BUSS_TYPE = "";		//수탁사업자업종                               	var BROK_CHRG_POST = "";		//수탁사업자담당자부서명                       	var BROK_CHRG_NM = "";		//수탁사업자담당자명                           	var BROK_CHRG_TEL = "";		//수탁사업자담당자전화번호                     	var BROK_CHRG_EMAIL = "";	//수탁사업자담당자이메일                       	var PYMT_TYPE1 = "";			//결제방법코드1                                	var PAMT_AMT1 = "";			//금액1                                        	var PYMT_TYPE2 = "";			//결제방법코드2                                	var PAMT_AMT2 = "";			//금액2                                        	var PYMT_TYPE3 = "";			//결제방법코드3                                	var PAMT_AMT3 = "";			//금액3                                        	var PYMT_TYPE4 = "";			//결제방법코드4                                	var PAMT_AMT4 = "";			//금액4                                        	var CHRG_AMT = "";			//공급가액합계                                 	var TAX_AMT = "";			//세액합계                                     	var TOTL_AMT = "";			//총금액                                       	var STAT_CODE = "";			//상태코드                                     	var BILL_SEQ_NO = "";		//거래명세표일련번호                           	var ERR_CD = "";				//오류코드                                     	var ERR_MSG = "";			//오류메시지                                   	var USER_ID = "";			//발행자ID                                     	var SEND_MSG = "";			//발행메시지                                   	var RECB_MSG = "";			//접수메시지                                   	var ACCP_YN = "";			//접수확인                                     	var SND_EMAIL = "";			//Email발행요청유무(공급받는자1)               	var SND_SMS = "";			//SMS발행요청유무(공급받는자1)                 	var SND_FAX = "";			//FAX발행요청유무(공급받는자1)                 	var BUYR_CHRG_MOBL1 = "";	//공급받는자휴대폰번호1                        	var BUYR_CHRG_MOBL2 = "";	//공급받는자휴대폰번호2                        	var BUYR_CHRG_FAX = "";		//공급받는자FAX번호                            	var ORGL_DATA = "";			//수정세금계산서 구분                          	var TEMP_PASS = "";			//임시조회비밀번호                             	var RECP_CD = "";			//역발행 구분                                  	var MULT_ISSU_ID = "";		//대량발행 일련번호                            	var REQ_CHNEL = "";			//요청채널구분                                 	var SND_MAL_YN = "";			//Email 발행요청유무(공급자, 공급받는자2)      	var SND_SMS_YN = "";			//SMS발행요청유무(공급자, 공급받는자2)         	var SND_FAX_YN = "";			//FAX발행요청유무(공급자, 공급받는자2)         	var SELR_CHRG_MOBL = "";		//공급자휴대폰번호(위수탁용)                   	var SELR_CHRG_FAX = "";		//공급자FAX번호(위수탁용)                      	var REPT_USER_ID = "";		//접수승인자ID                                 	var SGIN_DATA = "";			//전자서명데이타                               	var BFO_ISSU_ID = "";		//수정전 승인번호                              	var USER_R = "";				//개인키값                                     	var REQ_NTS_DATE = "";		//국세청 전송요청일자                          	var INSERT_DATE = "";		//데이터 저장일자                              	var INSERT_TIME = "";		//데이터 저장시간                              	var SND_NTS_DATE = "";		//국세청 전송일자                              	var SND_NTS_TIME = "";		//국세청 전송시간                              	var RCV_NTS_DATE = "";		//국세청 응답일자                              	var RCV_NTS_TIME = "";		//국세청 응답시간                              	var TAX_CODE = "";			//세금계산서코드                               	var TAX_DIV = "";			//세금계산서분류                               	var ISSU_SND_CD = "";		//발행옵션 구분코드                            	var ISSU_SND_VAL = "";		//발행옵션 특정일자값                          	var MAIL_ACP_CD = "";		//메일승인옵션설정                             	var SELR_BRN_CD = "";		//공급자 지사코드                              	var BUYR_BRN_CD = "";		//공급받는자 지사코드   	// DETAIL	var SEQ_NO			= "";	var BUY_DATE		= "";	var ITEM_NM			= "";	var ITEM_INFM		= "";	var ITEM_DESP		= "";	var ITEM_QUNT		= "";	var UNIT_PRCE		= "";	var ITEM_AMT		= "";	var ITEM_TAX		= "";	var ITEM_CODE		= "";	//	alert(typeof(data));	//	alert("data="+data);	if (typeof(data) == "string") { 		if(window.ActiveXObject) {			xml = new ActiveXObject("Microsoft.XMLDOM"); 			xml.async = false; 			xml.loadXML(data); 		} else {		  xml = document.implementation.createDocument("", "", null); 		}		alert("xml.parseError   : "+xml.parseError);		if(xml.parseError != 0) {			alert("유효한 XML이 아닙니다.");			return;		}	} else { 		xml = data;	//		data = xml.xml;	} 	if(typeof(xml) != "object") {		alert("전자세금계산서 형식의 XML이 아닙니다."   +typeof(xml));		return;	}  	var taxInvoiceOwnerName = uf_getTaxInvoiceOwnerName(_taxInvoice_OwnerType);	$("#TaxInvoice_OwnerName").text(taxInvoiceOwnerName); 	if(_taxInvoice_OwnerType == "Invoicer") {		// css 수정		$("table.etaxbillSend").attr("class", "tbl_bill01 etaxbill");	} else {		$("table.etaxbillSend").attr("class", "tbl_bill01 etaxbillSend");	}	// 상품정보 빈 라인 삭제 (화면에서 미리 양식 보여줄 경우를 고려해서 작업)	$(".TaxInvoiceTradeLineItem").remove();	// form 내용 초기화	$("#" + _taxInvoice_DataFormObjId + " > textarea.generated").remove(); 	$("TaxInvoice", xml).each(function(){		// 전자서명		//SGIN_DATA = $(" > Signature", this).text();		USER_R = $("ds\\:DigestValue", this).text(); 		// 관리정보		$(" > ExchangedDocument", this).each(function(){			SERV_ID = $(" > ID", this).text();			var issueDateTime = new Date(getDateFromFormat($(" > IssueDateTime", this).text(), "yyyyMMddHHmmss"));			ISSU_DATE = formatDate(issueDateTime, "yyyyMMdd");			ISSU_TIME = formatDate(issueDateTime, "HHmmss");		}); 		// 기본정보		$(" > TaxInvoiceDocument", this).each(function(){			// 세금계산서 종류에 따른 구분			TAX_TYPE = $(" > TypeCode", this).text();	// 세금계산서 종류			TAX_CODE = TAX_TYPE.substr(0, 2);			TAX_DIV = TAX_TYPE.substr(2, 2);			// 위수탁 여부에 따른 구분			if(TAX_DIV == "03" || TAX_DIV == "05" ) {				$("#InvoiceParty").hide();				$("#BrokerParty").show();			} else {				$("#InvoiceParty").show();				$("#BrokerParty").hide();			} 			// 세금계산서 제목			var taxInvoiceDocumentTitle = uf_getTaxInvoiceDocumentTitle(TAX_CODE, TAX_DIV);			$("#TaxInvoiceDocument_Title").text(taxInvoiceDocumentTitle);	// 세금계산서 제목			// 영수/청구 구분			POPS_CODE = $(" > PurposeCode", this).text();	// 영수/청구 구분						if(POPS_CODE == null || typeof(POPS_CODE) == "undefined" || POPS_CODE == "") {			  POPS_CODE = "01";			}			$("#TaxInvoiceDocument_PurposeName").text(uf_getTaxInvoiceDocumentPurposeName(POPS_CODE));	// 세금계산서 제목			// 수정코드			MODY_CODE = $(" > AmendmentStatusCode", this).text(); 			// 승인번호			ISSU_ID = $(" > IssueID", this).text();			$("#TaxInvoiceDocument_IssueID").text(ISSU_ID);			// 비고			var descriptionTextAll = "";			noteIndex = 1;			$(" > DescriptionText", this).each(function(){				var descriptionText = $(this).text();				eval("NOTE" + noteIndex + " = '"+descriptionText+"';");				descriptionTextAll += descriptionText;				noteIndex++;			});			$("#TaxInvoiceDocument_DescriptionText").text(descriptionTextAll);			var issueDateTime = new Date(getDateFromFormat($(" > IssueDateTime", this).text(), "yyyyMMdd"));			var yearOfissueDateTime = issueDateTime.getYear();			var monthOfissueDateTime = issueDateTime.getMonth() + 1;			var dayOfissueDateTime = issueDateTime.getDate();			REGS_DATE = formatDate(issueDateTime, "yyyyMMdd");			$("#TaxInvoiceDocument_IssueDateTime").text(formatDate(issueDateTime, "yyyy-MM-dd"));	// 작성일자			$("#TaxInvoiceDocument_YearOfIssueDateTime").text(yearOfissueDateTime);	// 작성일자(년)			$("#TaxInvoiceDocument_MonthOfIssueDateTime").text(monthOfissueDateTime);	// 작성일자(월)			$("#TaxInvoiceDocument_DayOfIssueDateTime").text(dayOfissueDateTime);	// 작성일자(일)			// 수입세금계산서 정보			$(" > ReferencedImportDocument", this).each(function(){				IMPT_NO = $(" > ID", this).text();								// 수입신고번호				ITEM_QUANT = $(" > ItemQuantity", this).text();					// 수입총건				$(" > AcceptablePeriod", this).each(function(){					ACEP_STAT_DATE = $(" > StartDateTime", this).text();		// 일괄발급시작일					ACEP_END_DATE = $(" > EndDateTime", this).text();			// 일괄발급종료일				});			});		}); 		// 거래 정보		$(" > TaxInvoiceTradeSettlement", this).each(function(){			// Summary			$(" > SpecifiedMonetarySummation", this).each(function(){				// 세액				TAX_AMT = $(" > TaxTotalAmount", this).text();								$("#TaxInvoiceTradeSettlement_SpecifiedMonetarySummation_TaxTotalAmount").text(putComma(TAX_AMT));			 				for(i = 0; i < TAX_AMT.length; i++) {					var taxTotalAmountKey = TAX_AMT.length - i;					var taxTotalAmountVal = TAX_AMT.charAt(i);					$("#TaxInvoiceTradeSettlement_SpecifiedMonetarySummation_TaxTotalAmount"+taxTotalAmountKey).text(putComma(taxTotalAmountVal));				}	 				// 공급가액				CHRG_AMT = $(" > ChargeTotalAmount", this).text();				$("#TaxInvoiceTradeSettlement_SpecifiedMonetarySummation_ChargeTotalAmount").text(putComma(CHRG_AMT)); 				for(i = 0; i < CHRG_AMT.length; i++) {					var chargeTotalAmountKey = CHRG_AMT.length - i;					var chargeTotalAmountVal = CHRG_AMT.charAt(i);					$("#TaxInvoiceTradeSettlement_SpecifiedMonetarySummation_ChargeTotalAmount"+chargeTotalAmountKey).text(putComma(chargeTotalAmountVal));				}				// 합계금액				TOTL_AMT = $(" > GrandTotalAmount", this).text();				$("#TaxInvoiceTradeSettlement_SpecifiedMonetarySummation_GrandTotalAmount").text(putComma(TOTL_AMT));			});			// 공급자 정보			$(" > InvoicerParty", this).each(function(){				// 공급자 사업자등록번호				SELR_CORP_NO = $(" > ID", this).text();				$("#TaxInvoiceTradeSettlement_InvoicerParty_ID").text(corpNumberFormat(SELR_CORP_NO));														// 공급자 상호				SELR_CORP_NM = $(" > NameText", this).text();				$("#TaxInvoiceTradeSettlement_InvoicerParty_NameText").text(SELR_CORP_NM);				// 공급업체의 업태				SELR_BUSS_CONS = $(" > TypeCode", this).text();				$("#TaxInvoiceTradeSettlement_InvoicerParty_TypeCode").text(SELR_BUSS_CONS);									// 공급업체의 업종				SELR_BUSS_TYPE = $(" > ClassificationCode", this).text();				$("#TaxInvoiceTradeSettlement_InvoicerParty_ClassificationCode").text(SELR_BUSS_TYPE);						// 종사업장 정보				$(" > SpecifiedOrganization", this).each(function(){					SELR_CODE = $(" > TaxRegistrationID", this).text();					$("#TaxInvoiceTradeSettlement_InvoicerParty_SpecifiedOrganization_TaxRegistrationID").text(SELR_CODE);		// 종사업장 식별코드				})				// 공급자 대표자 정보				$(" > SpecifiedPerson", this).each(function(){					SELR_CEO = $(" > NameText", this).text();					$("#TaxInvoiceTradeSettlement_InvoicerParty_SpecifiedPerson_NameText").text(SELR_CEO);		// 공급업체 대표자명				});				// 공급자 주소				$(" > SpecifiedAddress", this).each(function(){					SELR_ADDR = $(" > LineOneText", this).text();					$("#TaxInvoiceTradeSettlement_InvoicerParty_SpecifiedAddress_LineOneText").text(SELR_ADDR);		// 공급업체의 주소				});				// 담당자 정보				$(" > DefinedContact", this).each(function(){					SELR_CHRG_POST = $(" > DepartmentNameText", this).text();							// 담당부서명					SELR_CHRG_NM = $(" > PersonNameText", this).text();									// 담당자명					SELR_CHRG_TEL = $(" > TelephoneCommunication", this).text();						// 담당자전화번호					SELR_CHRG_EMAIL = $(" > URICommunication", this).text();							// 담당자이메일				});			});			// 공급받는자 정보			$(" > InvoiceeParty", this).each(function(){				// 사업자등록번호				BUYR_CORP_NO = $(" > ID", this).text();				$("#TaxInvoiceTradeSettlement_InvoiceeParty_ID").text(corpNumberFormat(BUYR_CORP_NO));														// 상호				BUYR_CORP_NM = $(" > NameText", this).text();				$("#TaxInvoiceTradeSettlement_InvoiceeParty_NameText").text(BUYR_CORP_NM);				// 업태				BUYR_BUSS_CONS = $(" > TypeCode", this).text();				$("#TaxInvoiceTradeSettlement_InvoiceeParty_TypeCode").text(BUYR_BUSS_CONS);				// 업종				BUYR_BUSS_TYPE = $(" > ClassificationCode", this).text();				$("#TaxInvoiceTradeSettlement_InvoiceeParty_ClassificationCode").text(BUYR_BUSS_TYPE);				// 종사업장 정보				$(" > SpecifiedOrganization", this).each(function(){					BUYR_GB = $(" > BusinessTypeCode", this).text();			// 공급받는자 구분코드					BUYR_CODE = $(" > TaxRegistrationID", this).text();					$("#TaxInvoiceTradeSettlement_InvoiceeParty_SpecifiedOrganization_TaxRegistrationID").text(BUYR_CODE);		// 공급받는자 종사업장 식별코드				})				// 대표자 정보				$(" > SpecifiedPerson", this).each(function(){					BUYR_CEO = $(" > NameText", this).text();					$("#TaxInvoiceTradeSettlement_InvoiceeParty_SpecifiedPerson_NameText").text(BUYR_CEO);				});				// 주소				$(" > SpecifiedAddress", this).each(function(){					BUYR_ADDR = $(" > LineOneText", this).text();					$("#TaxInvoiceTradeSettlement_InvoiceeParty_SpecifiedAddress_LineOneText").text(BUYR_ADDR);				});				// 담당자1 정보				$(" > PrimaryDefinedContact", this).each(function(){					BUYR_CHRG_POST1 = $(" > DepartmentNameText", this).text();							// 담당부서명					BUYR_CHRG_NM1 = $(" > PersonNameText", this).text();									// 담당자명					BUYR_CHRG_TEL1 = $(" > TelephoneCommunication", this).text();						// 담당자전화번호					BUYR_CHRG_EMAIL1 = $(" > URICommunication", this).text();							// 담당자이메일				}); 				// 담당자2 정보				$(" > SecondaryDefinedContact", this).each(function(){					BUYR_CHRG_POST2 = $(" > DepartmentNameText", this).text();							// 담당부서명					BUYR_CHRG_NM2 = $(" > PersonNameText", this).text();									// 담당자명					BUYR_CHRG_TEL2 = $(" > TelephoneCommunication", this).text();						// 담당자전화번호					BUYR_CHRG_EMAIL2 = $(" > URICommunication", this).text();							// 담당자이메일				}); 			});      // 수탁자 정보			$(" > BrokerParty", this).each(function(){				// 사업자등록번호				BROK_CORP_NO = $(" > ID", this).text();				$("#TaxInvoiceTradeSettlement_BrokerParty_ID").text(corpNumberFormat(BROK_CORP_NO));												// 업체명				BROK_CORP_NM = $(" > NameText", this).text();				$("#TaxInvoiceTradeSettlement_BrokerParty_NameText").text(BROK_CORP_NM);											// 업태				BROK_BUSS_CONS = $(" > TypeCode", this).text();				$("#TaxInvoiceTradeSettlement_BrokerParty_TypeCode").text(BROK_BUSS_CONS);							// 수탁자 업태				// 업종				BROK_BUSS_TYPE = $(" > ClassificationCode", this).text();				$("#TaxInvoiceTradeSettlement_BrokerParty_ClassificationCode").text(BROK_BUSS_TYPE);        // 종사업장 정보				$(" > SpecifiedOrganization", this).each(function(){					BROK_CODE = $(" > TaxRegistrationID", this).text();					$("#TaxInvoiceTradeSettlement_BrokerParty_SpecifiedOrganization_TaxRegistrationID").text(BROK_CODE);		// 수탁자 종사업장 식별코드				})								// 대표자 정보				$(" > SpecifiedPerson", this).each(function(){					BROK_CEO = $(" > NameText", this).text();					$("#TaxInvoiceTradeSettlement_BrokerParty_SpecifiedPerson_NameText").text(BROK_CEO);				});				// 주소				$(" > SpecifiedAddress", this).each(function(){					BROK_ADDR = $(" > LineOneText", this).text();					$("#TaxInvoiceTradeSettlement_BrokerParty_SpecifiedAddress_LineOneText").text(BROK_ADDR);		// 수탁자 주소				});				// 담당자 정보				$(" > DefinedContact", this).each(function(){					BROK_CHRG_POST = $(" > DepartmentNameText", this).text();							// 담당부서명					BROK_CHRG_NM = $(" > PersonNameText", this).text();									// 담당자명					BROK_CHRG_TEL = $(" > TelephoneCommunication", this).text();						// 담당자전화번호					BROK_CHRG_EMAIL = $(" > URICommunication", this).text();							// 담당자이메일				});			});      			$(" > SpecifiedPaymentMeans", this).each(function(){				$(" > TypeCode", this).each(function(){					// 현금					if($(this).text() == "10") {						PYMT_TYPE1 = "10";						PAMT_AMT1 = $(this).next().text();					}					// 수표					if($(this).text() == "20") {						PYMT_TYPE2 = "20";						PAMT_AMT2 = $(this).next().text();					}					// 어음					if($(this).text() == "30") {						PYMT_TYPE3 = "30";						PAMT_AMT3 = $(this).next().text();					}					// 외상					if($(this).text() == "40") {						PYMT_TYPE4 = "40";						PAMT_AMT4 = $(this).next().text();					}				});			});			$("#TaxInvoiceTradeSettlement_SpecifiedPaymentMeans_PaidAmount10").text(putComma(PAMT_AMT1));		// 현금			$("#TaxInvoiceTradeSettlement_SpecifiedPaymentMeans_PaidAmount20").text(putComma(PAMT_AMT2));		// 수표			$("#TaxInvoiceTradeSettlement_SpecifiedPaymentMeans_PaidAmount30").text(putComma(PAMT_AMT3));		// 어음			$("#TaxInvoiceTradeSettlement_SpecifiedPaymentMeans_PaidAmount40").text(putComma(PAMT_AMT4));		// 외상			// 결제방법별 금액			//$(" > SpecifiedPaymentMeans", this).each(function(){			//	alert($(" > TypeCode:contains('10')", this).next().text());			//});		});		// 상품정보		var taxInvoiceTradeLineItem = ""; 		$(" > TaxInvoiceTradeLineItem", this).each(function(){			// 일련번호			SEQ_NO = $(" > SequenceNumeric", this).text();										BUY_DATE = $(" > PurchaseExpiryDateTime", this).text();							// 공급년월일			ITEM_NM = $(" > NameText", this).text();										// 품목명			ITEM_INFM = $(" > InformationText", this).text();								// 규격			ITEM_DESP = $(" > DescriptionText", this).text();								// 비고			ITEM_QUNT = $(" > ChargeableUnitQuantity", this).text();			// 수량			ITEM_AMT = $(" > InvoiceAmount", this).text();								// 공급가액			ITEM_TAX = 0;			UNIT_PRCE = 0;			$(" > TotalTax", this).each(function(){				ITEM_TAX = $(" > CalculatedAmount", this).text();				// 세액			});			$(" > UnitPrice", this).each(function(){				UNIT_PRCE = $(" > UnitAmount", this).text();							// 단가			});			var monthOfTaxInvoiceTradeLineItem_PurchaseExpiryDateTime = BUY_DATE.substr(4, 2);			var dayOfTaxInvoiceTradeLineItem_PurchaseExpiryDateTime = BUY_DATE.substr(6, 2);						taxInvoiceTradeLineItem += "<tr class='TaxInvoiceTradeLineItem'>";			taxInvoiceTradeLineItem += "<td class=\"vt\">"+monthOfTaxInvoiceTradeLineItem_PurchaseExpiryDateTime+"</td>";			taxInvoiceTradeLineItem += "<td class=\"vt\">"+dayOfTaxInvoiceTradeLineItem_PurchaseExpiryDateTime+"</td>";			taxInvoiceTradeLineItem += "<td class=\"t_left vt\">"+ITEM_NM+"</td>";			taxInvoiceTradeLineItem += "<td class=\"vt\">"+ITEM_INFM+"</td>";			taxInvoiceTradeLineItem += "<td class=\"t_right vt\">"+ITEM_QUNT+"</td>";			taxInvoiceTradeLineItem += "<td class=\"t_right vt\">"+putComma(UNIT_PRCE)+"</td>";			taxInvoiceTradeLineItem += "<td class=\"t_right vt\">"+putComma(ITEM_AMT)+"</td>";			taxInvoiceTradeLineItem += "<td class=\"t_right vt TaxAmount\">"+putComma(ITEM_TAX)+"</td>";			taxInvoiceTradeLineItem += "<td class=\"vt\"></td>";			taxInvoiceTradeLineItem += "</tr>";			uf_createTaxInvoiceFormData("SEQ_NO"		, SEQ_NO				);			uf_createTaxInvoiceFormData("BUY_DATE"		, BUY_DATE				);			uf_createTaxInvoiceFormData("ITEM_NM"		, ITEM_NM				);			uf_createTaxInvoiceFormData("ITEM_INFM"		, ITEM_INFM				);			uf_createTaxInvoiceFormData("ITEM_DESP"		, ITEM_DESP				);			uf_createTaxInvoiceFormData("ITEM_QUNT"		, ITEM_QUNT				);			uf_createTaxInvoiceFormData("UNIT_PRCE"		, UNIT_PRCE				);			uf_createTaxInvoiceFormData("ITEM_AMT"		, ITEM_AMT				);			uf_createTaxInvoiceFormData("ITEM_TAX"		, ITEM_TAX				);			uf_createTaxInvoiceFormData("ITEM_CODE"		, ITEM_CODE				);		});		$("#TaxInvoiceTradeLineItemHeader").after(taxInvoiceTradeLineItem);		// 일반 또는 세금계산서에 따른 구분		if(TAX_CODE == "01" || TAX_CODE == "02" ) {			$(".TaxAmount").show();			// 공급가액 스타일 변경			$(".ChargeAmount_br").removeClass("bline_br");			$(".ChargeAmount_br").addClass("bline_b");			$(".ChargeAmount_r").removeClass("bline_r");			$(".ChargeAmount_tr").removeClass("bline_tr");			$(".ChargeAmount_tr").addClass("bline_t");			$("#BrokerParty_ColGroup").html(				"<col width=\"5%\" />" +				"<col width=\"5%\" />" +				"<col width=\"5%\" />" +				"<col width=\"20%\"/>" +				"<col width=\"20%\" />" +				"<col width=\"3%\" />" +				"<col width=\"8%\" />" +				"<col width=\"12%\" />" +				"<col width=\"5%\" />" +				"<col width=\"12%\" />"			);		} else {			$(".TaxAmount").hide();			// 공급가액 스타일 변경			$(".ChargeAmount_br").removeClass("bline_b");			$(".ChargeAmount_br").addClass("bline_br");			$(".ChargeAmount_r").addClass("bline_r");			$(".ChargeAmount_tr").removeClass("bline_t");			$(".ChargeAmount_tr").addClass("bline_tr");			$("#BrokerParty_ColGroup").html(				"<col width=\"5%\" />" +				"<col width=\"5%\" />" +				"<col width=\"5%\" />" +				"<col width=\"20%\" />" +				"<col width=\"3%\" />" +				"<col width=\"8%\" />" +				"<col width=\"12%\" />" +				"<col width=\"5%\" />" +				"<col width=\"12%\" />"			);		}	});	// 거래선 조회를 위한 공급자 사업자번호를 전역번수에 설정	_taxInvoice_InvoicerID = SELR_CORP_NO; 	//uf_createTaxInvoiceFormData(_taxInvoice_XmlObjId		, htmlspecialchars(data, 'ENT_QUOTES'));	// SGIN_DATA에는 전체 XML을 넣자.	uf_createTaxInvoiceFormData("SGIN_DATA"				, htmlspecialchars(data, 'ENT_QUOTES')             ); 	uf_createTaxInvoiceFormData("USER_R"				, USER_R                ); 	//uf_createTaxInvoiceFormData(_taxInvoice_XmlObjId		, data);	uf_createTaxInvoiceFormData("ISSU_ID"				, ISSU_ID				);	uf_createTaxInvoiceFormData("ISSU_DATE"				, ISSU_DATE				);		uf_createTaxInvoiceFormData("ISSU_TIME"				, ISSU_TIME             ); 	uf_createTaxInvoiceFormData("SERV_ID"				, SERV_ID               ); 	uf_createTaxInvoiceFormData("SELR_MGR_ID1"			, SELR_MGR_ID1          ); 	uf_createTaxInvoiceFormData("SELR_MGR_ID2"			, SELR_MGR_ID2          ); 	uf_createTaxInvoiceFormData("SELR_MGR_ID3"			, SELR_MGR_ID3          ); 	uf_createTaxInvoiceFormData("REGS_DATE"				, REGS_DATE             ); 	uf_createTaxInvoiceFormData("TAX_TYPE"				, TAX_TYPE              ); 	uf_createTaxInvoiceFormData("POPS_CODE"				, POPS_CODE             ); 	uf_createTaxInvoiceFormData("MODY_CODE"				, MODY_CODE             ); 	uf_createTaxInvoiceFormData("NOTE1"					, NOTE1                 ); 	uf_createTaxInvoiceFormData("NOTE2"					, NOTE2                 ); 	uf_createTaxInvoiceFormData("NOTE3"					, NOTE3                 ); 	uf_createTaxInvoiceFormData("IMPT_NO"				, IMPT_NO               ); 	uf_createTaxInvoiceFormData("ACEP_STAT_DATE"			, ACEP_STAT_DATE        ); 	uf_createTaxInvoiceFormData("ACEP_END_DATE"			, ACEP_END_DATE         ); 	uf_createTaxInvoiceFormData("ITEM_QUANT"				, ITEM_QUANT            ); 	uf_createTaxInvoiceFormData("SELR_CORP_NO"			, SELR_CORP_NO          ); 	uf_createTaxInvoiceFormData("SELR_CODE"				, SELR_CODE             ); 	uf_createTaxInvoiceFormData("SELR_CORP_NM"			, SELR_CORP_NM          ); 	uf_createTaxInvoiceFormData("SELR_CEO"				, SELR_CEO              ); 	uf_createTaxInvoiceFormData("SELR_ADDR"				, SELR_ADDR             ); 	uf_createTaxInvoiceFormData("SELR_BUSS_CONS"			, SELR_BUSS_CONS        ); 	uf_createTaxInvoiceFormData("SELR_BUSS_TYPE"			, SELR_BUSS_TYPE        ); 	uf_createTaxInvoiceFormData("SELR_CHRG_POST"			, SELR_CHRG_POST        ); 	uf_createTaxInvoiceFormData("SELR_CHRG_NM"			, SELR_CHRG_NM          ); 	uf_createTaxInvoiceFormData("SELR_CHRG_TEL"			, SELR_CHRG_TEL         ); 	uf_createTaxInvoiceFormData("SELR_CHRG_EMAIL"		, SELR_CHRG_EMAIL       ); 	uf_createTaxInvoiceFormData("BUYR_GB"				, BUYR_GB               ); 	uf_createTaxInvoiceFormData("BUYR_CORP_NO"			, BUYR_CORP_NO          ); 	uf_createTaxInvoiceFormData("BUYR_CODE"				, BUYR_CODE             ); 	uf_createTaxInvoiceFormData("BUYR_CORP_NM"			, BUYR_CORP_NM          ); 	uf_createTaxInvoiceFormData("BUYR_CEO"				, BUYR_CEO              ); 	uf_createTaxInvoiceFormData("BUYR_ADDR"				, BUYR_ADDR             ); 	uf_createTaxInvoiceFormData("BUYR_BUSS_CONS"			, BUYR_BUSS_CONS        ); 	uf_createTaxInvoiceFormData("BUYR_BUSS_TYPE"			, BUYR_BUSS_TYPE        ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_POST1"		, BUYR_CHRG_POST1       ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_NM1"			, BUYR_CHRG_NM1         ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_TEL1"			, BUYR_CHRG_TEL1        ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_EMAIL1"		, BUYR_CHRG_EMAIL1      ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_POST2"		, BUYR_CHRG_POST2       ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_NM2"			, BUYR_CHRG_NM2         ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_TEL2"			, BUYR_CHRG_TEL2        ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_EMAIL2"		, BUYR_CHRG_EMAIL2      ); 	uf_createTaxInvoiceFormData("BROK_CORP_NO"			, BROK_CORP_NO          ); 	uf_createTaxInvoiceFormData("BROK_CODE"				, BROK_CODE             ); 	uf_createTaxInvoiceFormData("BROK_CORP_NM"			, BROK_CORP_NM          ); 	uf_createTaxInvoiceFormData("BROK_CEO"				, BROK_CEO              ); 	uf_createTaxInvoiceFormData("BROK_ADDR"				, BROK_ADDR             ); 	uf_createTaxInvoiceFormData("BROK_BUSS_CONS"			, BROK_BUSS_CONS        ); 	uf_createTaxInvoiceFormData("BROK_BUSS_TYPE"			, BROK_BUSS_TYPE        ); 	uf_createTaxInvoiceFormData("BROK_CHRG_POST"			, BROK_CHRG_POST        ); 	uf_createTaxInvoiceFormData("BROK_CHRG_NM"			, BROK_CHRG_NM          ); 	uf_createTaxInvoiceFormData("BROK_CHRG_TEL"			, BROK_CHRG_TEL         ); 	uf_createTaxInvoiceFormData("BROK_CHRG_EMAIL"		, BROK_CHRG_EMAIL       ); 	uf_createTaxInvoiceFormData("PYMT_TYPE1"				, PYMT_TYPE1            ); 	uf_createTaxInvoiceFormData("PAMT_AMT1"				, PAMT_AMT1             ); 	uf_createTaxInvoiceFormData("PYMT_TYPE2"				, PYMT_TYPE2            ); 	uf_createTaxInvoiceFormData("PAMT_AMT2"				, PAMT_AMT2             ); 	uf_createTaxInvoiceFormData("PYMT_TYPE3"				, PYMT_TYPE3            ); 	uf_createTaxInvoiceFormData("PAMT_AMT3"				, PAMT_AMT3             ); 	uf_createTaxInvoiceFormData("PYMT_TYPE4"				, PYMT_TYPE4            ); 	uf_createTaxInvoiceFormData("PAMT_AMT4"				, PAMT_AMT4             ); 	uf_createTaxInvoiceFormData("CHRG_AMT"				, CHRG_AMT              ); 	uf_createTaxInvoiceFormData("TAX_AMT"				, TAX_AMT               ); 	uf_createTaxInvoiceFormData("TOTL_AMT"				, TOTL_AMT              ); 	uf_createTaxInvoiceFormData("STAT_CODE"				, STAT_CODE             ); 	uf_createTaxInvoiceFormData("BILL_SEQ_NO"			, BILL_SEQ_NO           ); 	uf_createTaxInvoiceFormData("ERR_CD"					, ERR_CD                ); 	uf_createTaxInvoiceFormData("ERR_MSG"				, ERR_MSG               ); 	uf_createTaxInvoiceFormData("USER_ID"				, USER_ID               ); 	uf_createTaxInvoiceFormData("SEND_MSG"				, SEND_MSG              ); 	uf_createTaxInvoiceFormData("RECB_MSG"				, RECB_MSG              ); 	uf_createTaxInvoiceFormData("ACCP_YN"				, ACCP_YN               ); 	uf_createTaxInvoiceFormData("SND_EMAIL"				, SND_EMAIL             ); 	uf_createTaxInvoiceFormData("SND_SMS"				, SND_SMS               ); 	uf_createTaxInvoiceFormData("SND_FAX"				, SND_FAX               ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_MOBL1"		, BUYR_CHRG_MOBL1       ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_MOBL2"		, BUYR_CHRG_MOBL2       ); 	uf_createTaxInvoiceFormData("BUYR_CHRG_FAX"			, BUYR_CHRG_FAX         ); 	uf_createTaxInvoiceFormData("ORGL_DATA"				, ORGL_DATA             ); 	uf_createTaxInvoiceFormData("TEMP_PASS"				, TEMP_PASS             ); 	uf_createTaxInvoiceFormData("RECP_CD"				, RECP_CD               ); 	uf_createTaxInvoiceFormData("MULT_ISSU_ID"			, MULT_ISSU_ID          ); 	uf_createTaxInvoiceFormData("REQ_CHNEL"				, REQ_CHNEL             ); 	uf_createTaxInvoiceFormData("SND_MAL_YN"				, SND_MAL_YN            ); 	uf_createTaxInvoiceFormData("SND_SMS_YN"				, SND_SMS_YN            ); 	uf_createTaxInvoiceFormData("SND_FAX_YN"				, SND_FAX_YN            ); 	uf_createTaxInvoiceFormData("SELR_CHRG_MOBL"			, SELR_CHRG_MOBL        ); 	uf_createTaxInvoiceFormData("SELR_CHRG_FAX"			, SELR_CHRG_FAX         ); 	uf_createTaxInvoiceFormData("REPT_USER_ID"			, REPT_USER_ID          ); 	uf_createTaxInvoiceFormData("BFO_ISSU_ID"			, BFO_ISSU_ID           ); 	uf_createTaxInvoiceFormData("REQ_NTS_DATE"			, REQ_NTS_DATE          ); 	uf_createTaxInvoiceFormData("INSERT_DATE"			, INSERT_DATE           ); 	uf_createTaxInvoiceFormData("INSERT_TIME"			, INSERT_TIME           ); 	uf_createTaxInvoiceFormData("SND_NTS_DATE"			, SND_NTS_DATE          ); 	uf_createTaxInvoiceFormData("SND_NTS_TIME"			, SND_NTS_TIME          ); 	uf_createTaxInvoiceFormData("RCV_NTS_DATE"			, RCV_NTS_DATE          ); 	uf_createTaxInvoiceFormData("RCV_NTS_TIME"			, RCV_NTS_TIME          ); 	uf_createTaxInvoiceFormData("TAX_CODE"				, TAX_CODE              ); 	uf_createTaxInvoiceFormData("TAX_DIV"				, TAX_DIV               ); 	uf_createTaxInvoiceFormData("ISSU_SND_CD"			, ISSU_SND_CD           ); 	uf_createTaxInvoiceFormData("ISSU_SND_VAL"			, ISSU_SND_VAL          ); 	uf_createTaxInvoiceFormData("MAIL_ACP_CD"			, MAIL_ACP_CD           ); 	uf_createTaxInvoiceFormData("SELR_BRN_CD"			, SELR_BRN_CD           ); 	uf_createTaxInvoiceFormData("BUYR_BRN_CD"			, BUYR_BRN_CD           ); }